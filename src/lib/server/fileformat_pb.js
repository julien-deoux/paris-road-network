//* Copyright (c) 2010 Scott A. Crosby. <scott@sacrosby.com>
//
//Permission is hereby granted, free of charge, to any person obtaining a copy of
//this software and associated documentation files (the "Software"), to deal in
//the Software without restriction, including without limitation the rights to
//use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies
//of the Software, and to permit persons to whom the Software is furnished to do
//so, subject to the following conditions:
//
//The above copyright notice and this permission notice shall be included in all
//copies or substantial portions of the Software.
//
//THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
//IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
//FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
//AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
//LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
//OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
//SOFTWARE.
//

// @generated by protoc-gen-es v1.10.0
// @generated from file fileformat.proto (package OSMPBF, syntax proto2)
/* eslint-disable */
// @ts-nocheck

import { proto2 } from "@bufbuild/protobuf";

/**
 * @generated from message OSMPBF.Blob
 */
export const Blob = /*@__PURE__*/ proto2.makeMessageType(
  "OSMPBF.Blob",
  () => [
    { no: 2, name: "raw_size", kind: "scalar", T: 5 /* ScalarType.INT32 */, opt: true },
    { no: 1, name: "raw", kind: "scalar", T: 12 /* ScalarType.BYTES */, oneof: "data" },
    { no: 3, name: "zlib_data", kind: "scalar", T: 12 /* ScalarType.BYTES */, oneof: "data" },
    { no: 4, name: "lzma_data", kind: "scalar", T: 12 /* ScalarType.BYTES */, oneof: "data" },
    { no: 5, name: "OBSOLETE_bzip2_data", kind: "scalar", T: 12 /* ScalarType.BYTES */, oneof: "data" },
    { no: 6, name: "lz4_data", kind: "scalar", T: 12 /* ScalarType.BYTES */, oneof: "data" },
    { no: 7, name: "zstd_data", kind: "scalar", T: 12 /* ScalarType.BYTES */, oneof: "data" },
  ],
);

/**
 * @generated from message OSMPBF.BlobHeader
 */
export const BlobHeader = /*@__PURE__*/ proto2.makeMessageType(
  "OSMPBF.BlobHeader",
  () => [
    { no: 1, name: "type", kind: "scalar", T: 9 /* ScalarType.STRING */, req: true },
    { no: 2, name: "indexdata", kind: "scalar", T: 12 /* ScalarType.BYTES */, opt: true },
    { no: 3, name: "datasize", kind: "scalar", T: 5 /* ScalarType.INT32 */, req: true },
  ],
);

